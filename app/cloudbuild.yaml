steps:
  - id: Build
    name: gcr.io/cloud-builders/docker
    # kanikoを使いつつsecretEnvを使うためのハック refs https://stackoverflow.com/questions/65370099/how-can-i-use-a-non-exec-entrypoint-for-kaniko-in-google-cloud-build-to-enable
    # secret envを使うためにはentrypointを使う必要があるが、kaniko executerでは直接entrypoint: bashを指定できないため
    # 通常のdocker環境を使ってentrypoint: bashを指定し、その中でkanikoを実行する
    entrypoint: /bin/bash
    args:
      - -c
      - |
        docker run --network=cloudbuild -v /workspace:/workspace \
          gcr.io/kaniko-project/executor:latest \
            --cache=true \
            --destination=$_IMAGE_URL:$COMMIT_SHA \
            --context dir:///workspace/app \
            --build-arg=SENTRY_AUTH_TOKEN=$$SENTRY_AUTH_TOKEN
    secretEnv: ["SENTRY_AUTH_TOKEN"]
  - id: Deploy
    name: "gcr.io/google.com/cloudsdktool/cloud-sdk:slim"
    args:
      - run
      - services
      - update
      - $_SERVICE_NAME
      - --image=$_IMAGE_URL:$COMMIT_SHA
      - --region=$_REGION
    entrypoint: gcloud
availableSecrets:
  secretManager:
    - versionName: projects/$PROJECT_ID/secrets/sentry_token/versions/latest
      env: SENTRY_AUTH_TOKEN
options:
  # TODO: GCSではなくcloud loggingにしているが、それでよいのかは検討していない
  # service accountを指定すると明示的に指定しないといけないため指定しているだけ
  logging: CLOUD_LOGGING_ONLY
